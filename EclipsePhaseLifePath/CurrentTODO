Maybe make a morphs list, with notes about what step/location they came from, and which one is active. It DOES look like you can have multiple morphs

Implement an effects list for all the morphs so it simply knows the mechanical effects of each baseline morph 

You know, you could make this even more interesting and use "define command", using all the tools structured so far, and by expanding the idea of $0,$1,$2, etc equals params of calling function to all functions. Basically allow structures that break complex commands into simpler ones. This. In turn, could lead to the generalization of all character attributes to variables, although honestly some structural stuff is good.

Will need to make a package undo mechanism after all -.-
	- maybe not. structured right this could still go decently
	
Some short TODO items also exist in the code

Need to make statusMessages to UIObject for most commands, currently it'll just silently plow through	
	
Make Table 11,69's effect more validated rather than lazy

Remember that characters store stress in {stress} variable
Remember that character store spare CP in {CP} variable. (This should be displayed, as well as means to manually edit/spend things
Remember that characters store a {speedBonus} variable to track any adjustments to speed

Resolve skill stacking (when you get a skill awarded you already have)

Make Traits and Sleights also use XML (possibly the whole internalInfo file)

Skils should display in the end with their aptitudes taken into effect


Currently working on : Secondary/Derived stats calculation in Character class